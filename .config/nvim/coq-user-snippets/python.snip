snippet pygameboilerplate
abbr pygame boilerplate
alias pgbp
  import time
  from typing import Self

  import pygame as pg


  class Game(object):
    
      def __init__(self: Self) -> None:
          pg.init()

          self._SCREEN_SIZE = (${1:width}, ${2:height})
          self._SURF_RATIO = (${3:x_ratio}, ${4:y_ratio})
          self._SURF_SIZE = (int(self._SCREEN_SIZE[0] / self._SURF_RATIO[0]),
                             int(self._SCREEN_SIZE[1] / self._SURF_RATIO[1]))
          self._SCREEN_FLAGS = pg.RESIZABLE | pg.SCALED
          self._GAME_SPEED = 60

          self._settings = {
              'vsync': 1,
          }
          self._screen = pg.display.set_mode(
              self._SCREEN_SIZE,
              flags=self._SCREEN_FLAGS,
              vsync=self._settings['vsync']
          )
          pg.display.set_caption('${5:Name}')
          self._surface = pg.Surface(self._SURF_SIZE)
          self._running = 0
          
      def run(self: Self) -> None:
          self._running = 1
          start_time = time.time()

          while self._running:
              delta_time = time.time() - start_time
              start_time = time.time()

              rel_game_speed = delta_time * self._GAME_SPEED

              for event in pg.event.get():
                  if event.type == pg.QUIT:
                      self._running = 0

              resized_surf = pg.transform.scale(self._surface, self._SCREEN_SIZE)
              self._screen.blit(resized_surf, (0, 0))

              pg.display.update()

          pg.quit()


  if __name__ == '__main__':
      Game().run()
  ${0}
